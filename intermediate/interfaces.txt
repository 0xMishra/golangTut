package main

import (
	"fmt"
	"math"
)

type geometry interface {
	area() float64
	perim() float64
}

type Rect struct {
	width, height float64
}

type Circle struct {
	radius float64
}

func (r Rect) area() float64 {
	return r.height * r.width
}

func (c Circle) area() float64 {
	return math.Pi * c.radius * c.radius
}

func (r Rect) perim() float64 {
	return 2*r.height + 2*r.width
}

func (c Circle) perim() float64 {
	return math.Pi * 2 * c.radius
}

func (c Circle) diameter() float64 {
	return 2 * c.radius
}

func measure(g geometry) {
	fmt.Println(g)
	fmt.Println(g.area())
	fmt.Println(g.perim())
}

func main() {
	r := Rect{
		width: 2, height: 3,
	}
	c := Circle{
		radius: 5,
	}

	measure(r)
	measure(c)
}
