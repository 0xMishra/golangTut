package main

import (
	"errors"
	"fmt"
	"log"
	"math"
)

func sqrt(x float64) (float64, error) {
	if x < 0 {
		return 0, errors.New("math error: square root of a negative number")
	}
	return math.Sqrt(x), nil
}

func process(data []byte) error {
	if len(data) == 0 {
		return errors.New("error: empty data")
	}
	// process data here
	return nil
}

func main() {
	res, err := sqrt(16)
	if err != nil {
		log.Fatal(err)
		return
	}
	fmt.Println(res)
	data := []byte{}
	if err := process(data); err != nil {
		log.Fatal(err)
		return
	}
}

type myError struct {
	message string
}

func (m *myError) Error() string {
	return fmt.Sprintf("Error: %s", m.message)
}

func eprocess() error {
	return &myError{"custom message"}
}
